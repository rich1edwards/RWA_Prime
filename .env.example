# RWA Prime - Environment Variables Template
# Copy this file to .env and fill in your actual values
# NEVER commit .env to git!

# ============================================
# Application
# ============================================

# Environment (development, staging, production)
ENVIRONMENT=development

# Application version
APP_VERSION=1.0.0

# Debug mode (set to false in production)
DEBUG=true

# API host and port
API_HOST=0.0.0.0
API_PORT=8000

# Frontend URL (for CORS)
FRONTEND_URL=http://localhost:3000

# API URL (for frontend)
NEXT_PUBLIC_API_URL=http://localhost:8000

# ============================================
# Database
# ============================================

# PostgreSQL + TimescaleDB
DATABASE_URL=postgresql://postgres:your_password_here@localhost:5432/rwa_prime
DATABASE_POOL_SIZE=10
DATABASE_MAX_OVERFLOW=20

# Database for testing (separate from development)
TEST_DATABASE_URL=postgresql://postgres:your_password_here@localhost:5432/rwa_prime_test

# ============================================
# Redis
# ============================================

REDIS_URL=redis://localhost:6379/0
REDIS_MAX_CONNECTIONS=50

# ============================================
# Kafka
# ============================================

KAFKA_BOOTSTRAP_SERVERS=localhost:9092
KAFKA_CONSUMER_GROUP=rwa-prime-consumer
KAFKA_AUTO_OFFSET_RESET=earliest

# ============================================
# Authentication & Security
# ============================================

# JWT Secret Keys (generate with: openssl rand -hex 32)
JWT_SECRET_KEY=your_jwt_secret_key_here_use_openssl_rand_hex_32
JWT_ALGORITHM=RS256
ACCESS_TOKEN_EXPIRE_MINUTES=15
REFRESH_TOKEN_EXPIRE_DAYS=7

# JWT Key Paths (for RS256 asymmetric encryption)
JWT_PRIVATE_KEY_PATH=/secrets/jwt_private_key.pem
JWT_PUBLIC_KEY_PATH=/secrets/jwt_public_key.pem

# CSRF Secret (generate with: openssl rand -hex 32)
CSRF_SECRET_KEY=your_csrf_secret_key_here

# Session Secret (generate with: openssl rand -hex 32)
SESSION_SECRET_KEY=your_session_secret_key_here

# Password hashing (bcrypt rounds)
BCRYPT_ROUNDS=12

# Encryption key for sensitive fields (generate with: python -c "from cryptography.fernet import Fernet; print(Fernet.generate_key().decode())")
ENCRYPTION_KEY=your_encryption_key_here

# ============================================
# External APIs - Data Sources
# ============================================

# CoinAPI (Price Data)
COINAPI_KEY=your_coinapi_key_here
COINAPI_BASE_URL=https://rest.coinapi.io/v1

# Amberdata (Blockchain Data)
AMBERDATA_API_KEY=your_amberdata_key_here
AMBERDATA_BASE_URL=https://web3api.io/api/v2

# Bitquery (GraphQL Blockchain Data)
BITQUERY_API_KEY=your_bitquery_key_here
BITQUERY_BASE_URL=https://graphql.bitquery.io

# RWA.io (Fundamental Data)
RWAIO_API_KEY=your_rwaio_key_here
RWAIO_BASE_URL=https://api.rwa.io/v1

# Trading Economics (Macro Data)
TRADING_ECONOMICS_KEY=your_trading_economics_key_here
TRADING_ECONOMICS_BASE_URL=https://api.tradingeconomics.com

# NewsAPI.ai (News & Sentiment)
NEWSAPI_KEY=your_newsapi_key_here
NEWSAPI_BASE_URL=https://newsapi.ai/api/v1

# ============================================
# AWS (Production)
# ============================================

# AWS Credentials (use IAM roles in production)
AWS_ACCESS_KEY_ID=your_aws_access_key_id
AWS_SECRET_ACCESS_KEY=your_aws_secret_access_key
AWS_REGION=us-east-1

# S3 Buckets
S3_BUCKET_DATA_LAKE=rwa-prime-data-lake
S3_BUCKET_MODELS=rwa-prime-ml-models
S3_BUCKET_BACKUPS=rwa-prime-backups

# AWS Secrets Manager
SECRETS_MANAGER_ENABLED=false
SECRETS_MANAGER_PREFIX=rwa-prime/

# ============================================
# Machine Learning
# ============================================

# ML Model Paths
ML_MODEL_PATH=./models/
LSTM_MODEL_PATH=./models/lstm_v2.1.pkl
ARIMA_MODEL_PATH=./models/arima_v1.3.pkl
FINBERT_MODEL_PATH=./models/finbert

# ML Settings
ML_BATCH_SIZE=32
ML_DEVICE=cpu  # or 'cuda' for GPU
ML_PREDICTION_CACHE_TTL=3600  # 1 hour

# ============================================
# Monitoring & Logging
# ============================================

# Log Level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Sentry (Error Tracking)
SENTRY_DSN=your_sentry_dsn_here
SENTRY_ENVIRONMENT=development
SENTRY_TRACES_SAMPLE_RATE=0.1

# New Relic (APM)
NEW_RELIC_LICENSE_KEY=your_new_relic_key_here
NEW_RELIC_APP_NAME=RWA-Prime-Dev

# ============================================
# Rate Limiting
# ============================================

# Rate Limits (requests per minute by tier)
RATE_LIMIT_EXPLORER=100
RATE_LIMIT_PROFESSIONAL=500
RATE_LIMIT_ENTERPRISE=10000

# ============================================
# Email (for notifications)
# ============================================

# SMTP Settings
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=your_email@gmail.com
SMTP_PASSWORD=your_app_password_here
SMTP_FROM=noreply@rwa-prime.com

# SendGrid (alternative)
SENDGRID_API_KEY=your_sendgrid_key_here

# ============================================
# WebSocket
# ============================================

WEBSOCKET_PING_INTERVAL=30
WEBSOCKET_PING_TIMEOUT=10
WEBSOCKET_MAX_CONNECTIONS_PER_USER=5

# ============================================
# Feature Flags
# ============================================

FEATURE_2FA_ENABLED=true
FEATURE_WALLET_SYNC_ENABLED=false
FEATURE_PDF_EXPORT_ENABLED=false
FEATURE_API_ACCESS_ENABLED=false

# ============================================
# Testing
# ============================================

# Testing flags
TESTING=false
MOCK_EXTERNAL_APIS=false

# ============================================
# Docker Compose (Local Development)
# ============================================

# PostgreSQL (for docker-compose)
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres
POSTGRES_DB=rwa_prime

# Redis (for docker-compose)
REDIS_PASSWORD=

# Kafka (for docker-compose)
KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181

# ============================================
# Kubernetes (Production)
# ============================================

# Namespace
K8S_NAMESPACE=rwa-prime

# Image registry
DOCKER_REGISTRY=your_ecr_registry_here
DOCKER_IMAGE_TAG=latest

# ============================================
# Development Tools
# ============================================

# Pre-commit hooks
PRE_COMMIT_ENABLED=true

# Code formatting
BLACK_LINE_LENGTH=100
PRETTIER_PRINT_WIDTH=100

# ============================================
# Notes
# ============================================

# To generate secrets:
# - JWT Secret: openssl rand -hex 32
# - Encryption Key: python -c "from cryptography.fernet import Fernet; print(Fernet.generate_key().decode())"
# - RSA Keys: openssl genrsa -out jwt_private_key.pem 2048 && openssl rsa -in jwt_private_key.pem -pubout -out jwt_public_key.pem

# To copy this file:
# cp .env.example .env

# Then edit .env with your actual values
